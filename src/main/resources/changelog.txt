CM160Utils Changelog

Version 1.3.3
+ Improved FindAndInvoke for when multiple methods could be invoked, identifying the best one to use.

Version 1.3.2
+ Improved ParamUtils to be able to handle null arguments, thus making all reflective utilities capable of accepting null arguments.

Version 1.3.1
+ Improved ExceptionHandler so it could handle a wider range of exception conditions.

Version 1.3
+ Added new method to ObjectCreator to instantiate an Object with constructor arguments.
+ Separated parameter parsing for reflective invocation out of MethodUtils and into new ParamUtils class.
+ Overhauled the parameter parsing logic now in ParamUtils, and completely changed the API. Instead of separate validation and conversion methods, a single method now does both, significantly improving performance.
+ Created ConstructorUtils class to perform the same operations as MethodUtils, but for Constructors.
+ Significantly improved handling of primitives with reflective invocations.
+ Created new superclass for ReflectiveMethodHolder, ReflectiveHolder, that could be used for a wider range of reflective components.
+ Created new interface, ParameterizedHolder, to define a ReflectiveHolder where the reflective component has parameters.
+ Refactored ReflectiveMethodHolder, ObjectAndMethod, ClassAndMethod, and all accessing code to adapt to these changes to their inheritance hierarchy.
+ Created ObjectAndConstructor, a new subclass of ReflectiveHolder for working with constructors.
+ Created NoConstructorException, for if a matching constructor can't be found.
+ Major overhaul to FindAndInvoke API, standardized method names and removed single-object methods to avoid signature classes.

Version 1.2.1
+ Fixed bugs in SuperWeakHashMap

Version 1.2
+ Rewrote removeAll() method of MultiValueMap to a much better implementation. Also added a copy constructor.
+ Created new SuperWeakHashMap, a WeakHashMap where both keys and values are WeakReferences, and an entry is removed when either the key or the value no longer exists.

Version 1.1.1
+ Revamped internals of MultiValueMap to improve performance on key operations.

Version 1.1
+ Changed NoMethodException to subclass ReflectiveException, instead of directly subclasses RuntimeException.
+ Added new method to FindAndInvoke that accepts a collection of ObjectAndMethod objects.
+ Changed all FindAndInvoke public method names to findOneAndInvoke because they only invoke a single method.
+ Added new methods to FindAndInvoke to invoke multiple matching methods, but return no value.
+ Updated exception documentation for all FindAndInvoke methods.

Version 1.0.2
+ Added allValues() method to MultiValueMap, to return a single collection containing all the values in all the collections of the map.

Version 1.0.1
+ Changed InvocationException's inheritance to subclass ReflectiveException, instead of directly subclassing RuntimeException.

Version 1.0
+ Took all reflection utility code out of Locus Framework project and added it to this common library.
+ Took all reflection utility code out of now-abandoned ReflectionUtils project, rehabbed and cleaned it up, and added it to this common library.
+ Took repository API code from OrgBuilderAPI project and added it to this common library.
+ Took String utility methods from Locus Framework and OrgBuilderAPI and added them to this library as StringBuildingUtil and StringUtil.
+ Took LoggerCSVFormat from StockMarket project and added it to this common library.
+ Took advanced collections from Locus Framework and Contacts 5 projects and added them to this common library.